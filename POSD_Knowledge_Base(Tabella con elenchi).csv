#;Pattern;Strategies;Description Pattern;Context Pattern;Collocazione MVC;ISO 9241-210 Phase;Article GDPR Compliance with the Pattern;Privacy By Design Principles;OWASP Top Ten Categories;CWE Top 25 Most Dangerous Software Weaknesses OWASP Categories Associated;Examples;
001;Protection against Tracking;Minimize;This Pattern avoids tracking website visitors by cookies. It does this by deleting them at regular intervals or disabling cookies completely.;This pattern is applicable when personal identifiable information is tracked through software tools, protocols or mechanisms such as cookies and the like.;Controller, Model, View;7.4 Producing design solutions;Article 32 – Security of processing;Privacy as the default setting, Privacy Embedded into Design, Visibility and Transparency, Proactive not Reactive;A05:Security Misconfiguration, A07:Identification and Authentication Failures;CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;Example 1: Alice wants to buy shoes and she wants to shop online. She heads to an online shop and searches for shoes but can’t decide which ones she wants, so she buys neither of them. The next day she finds a couple of emails in her inbox, giving her suggestions for other shoes and alerting her that the viewed shoes are now on sale.;
002;Strip Invisible Metadata;Minimize;Delete potentially sensitive metadata that is not directly visible to the end user.;When a service requires a user to import data from external sources (e.g., images, tweets, documents), different types of metadata may be transmitted. Users may not be aware of metadata since it may be automatically generated or not directly visible. Services may be unintentionally responsible for exposing private metadata or going against users' expectations.;Controller, Model;7.4 Producing design solutions;Article 25 – Data protection by design and by default, Article 5 – Principles relating to processing of personal data;Respect for User Privacy, Visibility and Transparency, Privacy Embedded into Design;A04:Insecure Design, A05:Security Misconfiguration;CWE-269: Improper Privilege Management, CWE-434: Unrestricted Upload of File with Dangerous Type;"Example 1: Twitter.com removes EXIF data from images uploaded to their image sharing service. Previously there have been many breaches of personal location by using EXIF data shared by image sharing services.
Example 2: Flickr.com is a system features based on metadata, the metadata sharing is an important part of the community of users. Flickr.com allows users to hide their EXIF data from public display, and also provides an interface for users to easily see whether they are sharing location as part of uploading their images.";
003;Added-noise measurement obfuscation;Hide, Abstract;Add some noise to service operation measurements, but make it cancel itself in the long-term.;A service provider gets continuous measurements of a service attribute linked to a service individual.;Model;7.4 Producing design solutions;Article 32 – Security of processing;Privacy Embedded into Design, Visibility and Transparency;A04:Insecure Design, A05:Security Misconfiguration, A09:Security Logging and Monitoring Failures, A07:Identification and Authentication Failures;CWE-269: Improper Privilege Management, CWE-434: Unrestricted Upload of File with Dangerous Type, CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;Example 1: An electric utility operates a smart grid network with smart meters that provide measurements of the instantaneous power consumption of each user. The utility employs that information to both adapt the power distribution in a dynamic fashion, according to user demand at each moment, and bill the each client periodically, according to his aggregated consumption over the billing period. However, this information can also be exploited to infer sensitive user information (e.g. at what time he or she leaves and comes back to home, etc.);
004;Data Breach Notification Pattern;Inform;Managers of services (or products) provided to users collect massive amounts of data, much of it personal, to improve the quality and user experience of that service. All this must be done with the informed consent of the user, who must properly understand the risks associated with his or her data. One such risk is that of unauthorized access, modification, removal, or sharing of data. If a data breach occurs, notification is required. Any data controller within the EU (or providing services or products within the EU) must notify the supervisory authority of its principal establishment or representative. Notification must be made within 72 hours, unless warranted. Notification to users depends on whether they are sufficiently concerned.;Managers of services (or products) provided to users collect large amounts of data, much of it personal, to improve the quality and user experience of that service. All this must be done under the informed consent of the user, who should properly understand the risks associated with their data. One such risk is that of unauthorized access, modification, removal, or sharing of data. If such a data breach occurs, you must notify us. Any operator within (or providing services or products within) the EU must notify the supervisory authority of its main establishment or representative. This must be done within 72 hours unless justified. Notification to users depends on the degree of sufficient impact on their situation.;Controller, Model;7.3 Specify the requirements, 7.4 Producing design solutions;Article 33 – Notification of a personal data breach to the supervisory authority, Article 34 – Communication of a personal data breach to the data subject;Visibility and Transparency, Proactive not Reactive;A05:Security Misconfiguration, A08:Software and Data Integrity Failures, A09:Security Logging and Monitoring Failures;CWE-502: Deserialization of Untrusted Data;Example 1: Assume a [company] stores all employees' data [through a controller's service]. There is a contractual agreement between [them] that each data leakage is reported within one hour. Now Bob, an employee of [the controller] and not authorized to read [the company's] data, succeeds in circumventing [the] access control mechanisms and reads [personal] data. This represents a data breach of which [the company] has to be notified within an hour.;
005;Unusual Activities;Inform;Prevent suspicious access to user data through alerts and perform authentication through multiple factors in case of potential account compromise.;Services (or products), especially on the Internet, tend to use username and password-based authentication. This security mechanism is very convenient for users, as it is widespread and simple compared to more secure alternatives. However, it is subject to common flaws. Passwords become less secure as they remain unchanged, are often vulnerable to brute force attacks, espionage and phishing, and cannot be proven to be held exclusively by the user. This complicates the certainty of authentication, and thus the authenticity of any decision made by the user, including consent. Controllers may derive additional factors, such as device- or access-specific information. If location is provided, for example, it might suggest unlikely account activity.;Controller, Model;7.3 Specify the requirements, 7.4 Producing design solutions;Article 32 – Security of processing;Proactive not Reactive, Respect for User Privacy, End-to-End Security;A01:Broken Access Control, A07:Identification and Authentication Failures, A09:Security Logging and Monitoring Failures;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions, CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;"Example 1: Gmail displays information about other sessions (if any) in the footer, linking to a page named ""Activity on this account"" which lists other sessions and recent activities to the Gmail account. The user has the option to sign out other sessions. In case of annoying false positives, the user may choose to disable the alert for unusual activity. The disable takes about a week, ""to make sure the bad guys aren't the ones who turned off your alerts.""
Example 2: When Facebook detects an unusual sign-in, it shows 'social authentication' that displays a few pictures of the user's friends and asks the user to name the person in those photos.
Example 3: The 'Security' tab of the 'Settings' of the Dropbox website displays all web browser sessions logged in to the account, and enables the user to log out one or more of them. The name of the browser, operating system, and the IP address and corresponding country are displayed to help the user make a choice. It also displays all devices that are linked to the account, and allows the user to unlink one or more of them.";
006;Minimal Information Asymmetry;Inform;Prevent users from being disenfranchised by their lack of familiarity with the policies, potential risks, and their agency within processing.;Users frequently interact with controllers whose services (or products) they have not used before. At this point the knowledge the user has about the controller and its practices, especially regarding privacy, is typically nonexistent. The controller as a whole has a much clearer understanding of its policies. It also begins to know a lot about the user in a short time period, if not already well informed. The user needs to put in sufficient effort to investigate the controller to know about its practices to provide valid consent. The controller needs this valid consent to lawfully process the user's information.;Controller, Model;7.2 Understanding and specifying the context of use;Article 25 – Data protection by design and by default, Article 12 – Transparent information, communication and modalities for the exercise of the rights of the data subject;Visibility and Transparency, Proactive not Reactive, Privacy Embedded into Design;A04:Insecure Design, A05:Security Misconfiguration;CWE-269: Improper Privilege Management, CWE-434: Unrestricted Upload of File with Dangerous Type;Example 1: Many online organizations provide signals to their customers. Often they are publicly and freely available, but can also be purchased by third parties. The online auction site, eBay, for example, uses a reputation system to assist other buyers in feeling more comfortable purchasing from an unknown seller. Many other ecommerce sites (such as Amazon) rely heavily on the reputation and referral systems in order to help customers make a more informed decision.;
007;Onion Routing;Hide;This model ensures nonlinkability between senders and receivers by encapsulating data in different layers of encryption, limiting the knowledge of each node along the delivery path.;A system in which data is routed between different nodes.;Controller, Model;7.4 Producing design solutions;Article 25 – Data protection by design and by default, Article 32 – Security of processing;Privacy Embedded into Design, Proactive not Reactive, End-to-End Security;A02:Cryptographic Failures, A04:Insecure Design, A05:Security Misconfiguration, A08:Software and Data Integrity Failures, A07:Identification and Authentication Failures;CWE-269: Improper Privilege Management, CWE-434: Unrestricted Upload of File with Dangerous Type, CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication, CWE-502: Deserialization of Untrusted Data;"Example 1: Alice is a whistle-blower and tries to forward data to Bob who works at the press. She sends the corresponding documents as an e-mail-attachment. Eve monitors the traffic and can see who sent this mail to whom. The next day, police raids Alice's apartment and sends her to jail. Bobs mail account gets seized.
Example 2: The TOR-browser, a web-browser specifically designed to ensure anonymity makes heavy use of onion routing.";
008;Encryption with user-managed keys;Hide, Control;Use encryption in such a way that the service provider cannot decrypt the user's information because the user manages the keys.;User wants to store or transfer their personal data through an online service and they want to protect their privacy, and specifically the confidentiality of their personal information. Risks of unauthorized access may include the online service provider itself, or third parties such as its partners for example for backup, or government surveillance depending on the geographies the data is stored in or transferred through.;Controller, Model;7.4 Producing design solutions;Article 25 – Data protection by design and by default;Full Functionality,End-to-End Security;A02:Cryptographic Failures, A04:Insecure Design;CWE-269: Improper Privilege Management, CWE-434: Unrestricted Upload of File with Dangerous Type;"Example 1: Least Authority: secure off-site backup system with client side encryption.
Example 2: LastPass: encrypted credentials and personal information database with user managed encryption keys.";
009;Use of dummies;Hide;This pattern hides the actions taken by a user by adding fake actions that are indistinguishable from real.;This pattern is applicable when it is not possible to avoid executing, delaying or obfuscating the content of an action.;Controller, Model;7.4 Producing design solutions;Article 32 – Security of processing;Proactive not Reactive, Privacy as the default setting, Respect for User Privacy, Privacy Embedded into Design;A01:Broken Access Control, A03:Injection, A05:Security Misconfiguration, A07:Identification and Authentication Failures, A10:Server-Side Request Forgery (SSRF);CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions, CWE-20: Improper Input Validation, CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-20: Improper Input Validation, CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'), CWE-94: Improper Control of Generation of Code ('Code Injection'), CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication, CWE-918: Server-Side Request Forgery (SSRF);Example 1: Alice wants to search for an abortion clinic on Google, but she does not want to reveal her intentions of abort to an adversary that may be eavesdropping this search (e.g., ISP provider, system administrator of her workplace, etc).;
010;Federated Privacy Impact Assessment;Enforce;The impact of personal information in a federation is more than the impact in the federated.;Identity Management scenarios (that is, when the roles of the Identity Provider and the Service Provider are separated).;Model;7.5 Evaluating the design;Article 35 – Data protection impact assessment;Privacy Embedded into Design, Respect for User Privacy, Visibility and Transparency;A01:Broken Access Control, A05:Security Misconfiguration, A07:Identification and Authentication Failures;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions, CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;Example 1: An Identity Provider issues pseudonyms to authenticate users at third-party Service Providers, which can in turn check the authenticity of these pseudonyms at the Identity Provider, without getting to know the real user identity. However, the Identity Provider knows all the services requested by the users, which discloses personal information to the Identity Provider and allows it to profile the users.;
011;Obligation Management;Enforce;The pattern allows obligations relating to data sharing, storing and processing to be transferred and managed when the data is shared between multiple parties.;The developer aims to make sure that multiple parties are aware of and comply with required user/organisational policies as personal and sensitive data are successively shared between a series of parties who store or process that data.;Controller, Model;7.2 Understanding and specifying the context of use;Article 28 – Processor;Full Functionality;A05:Security Misconfiguration, A07:Identification and Authentication Failures, A08:Software and Data Integrity Failures, A09:Security Logging and Monitoring Failures;CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication, CWE-502: Deserialization of Untrusted Data, CWE-502: Deserialization of Untrusted Data;Example 1: A service provider subcontracts services, but requires that the data to be deleted after a certain time and that the service provider requires to be notified if there is further subcontracting.;
012;Sticky Policies;Enforce;Machine-readable policies are sticked to data to define allowed usage and obligations as it travels across multiple parties, enabling users to improve control over their personal information.;Multiple parties are aware of and act according to a certain policy when privacy-sensitive data is passed along the multiple successive parties storing, processing and sharing that data.;Model;7.4 Producing design solutions;Article 25 – Data protection by design and by default, Article 32 – Security of processing;Full Functionality, Privacy Embedded into Design;A05:Security Misconfiguration, A07:Identification and Authentication Failures, A08:Software and Data Integrity Failures, A09:Security Logging and Monitoring Failures;CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication, CWE-502: Deserialization of Untrusted Data, CWE-502: Deserialization of Untrusted Data;Example 1: When data is shared by an organisation they can use privacy preserving policy to enforce respecting user privacy by third party organisations that use, process and store such data. For example, a hospital may share data with third party organisations requiring adhering to specific privacy policies associated with the data.;
013;Personal Data Store;Control, Separate;Subjects keep control on their personal data that are stored on a personal device.;The pattern is applicable to any data produced by the data subject (or originally under his control) as opposed to data about him produced by third parties.;Model;7.4 Producing design solutions;Article 25 – Data protection by design and by default;Privacy Embedded into Design, Respect for User Privacy, Privacy as the default setting;A08:Software and Data Integrity Failures, A09:Security Logging and Monitoring Failures;CWE-502: Deserialization of Untrusted Data;Example 1: In the health sector, patients want to keep control over their health data but also to grant specific access to some health professionals.;
014;User data confinement pattern;Separate;Avoid the central collection of personal data by shifting some amount of the processing of personal data to the user-trusted environments (e.g. their own devices). Allow users to control the exact data that shares with service providers.;This pattern may be used whenever the collection of personal data with one specific and legitimate purpose still pose a relevant level of threat to the users' privacy.;Controller, Model;7.4 Producing design solutions;Article 32 – Security of processing;Proactive not Reactive, Privacy Embedded into Design;A01:Broken Access Control, A07:Identification and Authentication Failures;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions, CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;NA;
015;Anonymous Reputation-based Blacklisting;Separate, Hide;Get rid of troublemakers without even knowing who they are.;A service provider provides a service to users who access anonymously, and who may make bad use of the service.;Model;7.2 Understanding and specifying the context of use, 7.4 Producing design solutions;Article 32 – Security of processing;Privacy Embedded into Design, Full Functionality;A07:Identification and Authentication Failures;CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;Example 1: Wikipedia allows any visitor to modify its contents, even without having been authenticated. Some malicious visitors may vandalize the contents. If a visitor coming from the same IP address keeps vandalizing the site, they will earn a bad reputation, and their IP will be banned from modifying the contents anymore (however, users accessing through a Tor anonymity network proxy cannot be identified from their IPs, and thus their reputation cannot be tracked).;
016;Location Granularity;Abstract;Support minimization of data collection and distribution. Important when a service is collecting location data from or about a user, or transmitting location data about a user to a third-party.;When a service is collecting location data from or about a user, or transmitting location data about a user to a third-party.;Controller, Model;7.4 Producing design solutions;Article 5 – Principles relating to processing of personal data, Article 25 – Data protection by design and by default;Proactive not Reactive, Privacy Embedded into Design;A01:Broken Access Control, A05:Security Misconfiguration;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions;"Example 1: Yahoo! Fire Eagle allows user to provide location information to applications using eight different ""levels"" of granularity in their hierarchy: No information, As precise as possible, Postal code, Neighborhood, Town, Region, State and Country. Fire Eagle specifically requires that recipient applications be written to handle data at any of the levels, and allows updating the user's location at any level of granularity.
Example 2: Twitter allows users to tag a tweet with either exact coordinates, a Twitter ""place"" (a town, neighborhood or venue) or both.
Example 3: One of the fore-runners to the W3C Geolocation API, Firefox's experimental Geode feature allowed JavaScript access to the current location at four different levels of granularity.";
017;Discouraging blanket strategies;Control;Give users the possibility to define a privacy level from a range of options each time they share content.;Socially oriented services on the Internet allow their often diverse userbase to share content. These masses of users and shared content are also varied enough to discourage individual attention. Controllers prefer to protect themselves from additional complexity and investment into features which provide them with less data. Users, however, feel in need of privacy settings to distinguish their personal risk appetite from that of the norm. They each have their own ideas about the sensitivities of their information, which makes sufficient controls difficult to implement.;Controller, View;7.2 Understanding and specifying the context of use;Article 12 – Transparent information, communication and modalities for the exercise of the rights of the data subject;Privacy Embedded into Design, Respect for User Privacy;A04:Insecure Design, A07:Identification and Authentication Failures;CWE-269: Improper Privilege Management, CWE-434: Unrestricted Upload of File with Dangerous Type, CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;"Example 1: On Facebook, before publishing a post, you can set one of three levels of privacy for the post which can be ""Everyone"", ""Friends Only"", ""Private"". In the first case the post can be seen by any Facebook user, in the second case the post can only be seen by the friends of the post user, finally, in the last case the post is not visible to anyone except the owner.";
018;Reciprocity;Control;Let users benefit according to the contributions they make.;In services where users may either socially or collaboratively contribute, participation may be a foundation for the service's business model. In these situations the quality and frequency of content affects the success of the service, and thus users have a large impact on its survival. Whether any single user contributes, or not, plays a role in profitability, which puts the controller in a position to encourage or enforce equal participation. Users may respond to such ideas negatively, however, especially if they do not see potential gains worthy of their effort and personal risks to privacy.;Controller;7.2 Understanding and specifying the context of use;NA;Respect for User Privacy;A10:Server-Side Request Forgery (SSRF);CWE-918: Server-Side Request Forgery (SSRF);NA;
019;Incentivized Participation;Control;Users are more willing to contribute valuable input when they can do so without leaking personal data, or perceive an equal or greater exchange in value either monetarily or socially.;A data controller derives various values from the participation of its users (i.e. data subjects). The more that these users participate, explicitly providing context and implicitly providing metadata (e.g. statistics and telemetry), the better the controller fares in a number of respects. Despite this key relation, over-sharing can greatly infringe upon a user's right to privacy. Many controllers therefore aim to respect this right when benefiting from user interactions. As the controller should recognise the necessity of specific, informed, and freely given Lawful Consent, users are made aware of the pitfalls of such a system. As they are informed, perhaps through a combination of a Privacy Dashboard or Awareness Feed, users may balance the privacy related tradeoffs. This minimises the privacy risks taken according to the user's personal informed choices, and protects the controller from inadvertently undermining the user's privacy. The controller still desires participation, however, and may therefore make additional concessions or provisions to help make the tradeoff worthwhile or non-existent. The controller may complement its strategy with more granular choice in order to achieve this, such as with Selective Disclosure and Selective Disruption.;Controller, Model;7.2 Understanding and specifying the context of use, 6. Plan the human-centered design process;Article 5 – Principles relating to processing of personal data;Respect for User Privacy;A08:Software and Data Integrity Failures;CWE-502: Deserialization of Untrusted Data;NA;
020;Outsourcing [with consent];Control;The controller has to obtain additional specific, informed, explicit, and freely given consent before outsourcing data processing to a third party.;Controllers often do not have the means to feasibly or sufficiently process the data they oversee to the extent they desire. In these cases they seek an external processor or third party to handle the process. This typically conflicts with their already obtained consent from their users (their data subjects), as further processing by a third party is not necessarily compatible with the agreed upon purposes. In these situations the controller does not have legally obtained consent for this processing and will be liable if they carry it out.;Controller, Model;7.2 Understanding and specifying the context of use, 7.3 Specify the requirements;Article 13 – Information to be provided where personal data are collected from the data subject;Respect for User Privacy, Privacy as the default setting, Privacy Embedded into Design;A05:Security Misconfiguration, A07:Identification and Authentication Failures, A08:Software and Data Integrity Failures;CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication, CWE-502: Deserialization of Untrusted Data;Example 1: We hire a healthcare center, data controller, an interested user and a subcontractor, provider of sensor networks for monitoring user health. This subcontractor requires additional specific, informed, explicit and freely given consent from you.;
021;Sign an Agreement to Solve Lack of Trust on the Use of Private Data Context;Control;Services of a controller may require users to sign contracts that stipulate their obligations and processing purposes for which users must consent to use the service. This ensures that users can trust the controller as it is bound to the contract it signs.;Users do not inherently trust controllers who provide services (or products), as they do not have assurances as to what the controller's or their processor's true intentions are. Controllers and processors typically aim to make profit, but this might be at the expense of users if those users do not consider their privacy needs. The controller might have reasonable defaults or levels of control, but users also need to feel reassured that their choices are being honored. This is especially true of what they do or do not provide Lawful Consent for.;Controller, Model;7.2 Understanding and specifying the context of use;Article 6 – Lawfulness of processing, Article 7 – Conditions for consent;Proactive not Reactive, Privacy Embedded into Design, Respect for User Privacy, Visibility and Transparency;A01:Broken Access Control, A02:Cryptographic Failures, A03:Injection, A07:Identification and Authentication Failures;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions, CWE-20: Improper Input Validation, CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-20: Improper Input Validation, CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'), CWE-94: Improper Control of Generation of Code ('Code Injection'), CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;NA;
022;Pseudonymous Messaging;Hide;A messaging service is enhanced by using a trusted third party to exchange the identifiers of the communication partners by pseudonyms.;This pattern can be used for online communications by email, through message boards, and newsgroups.;Model;7.4 Producing design solutions;Article 32 – Security of processing;Privacy as the default setting, Respect for User Privacy, Proactive not Reactive;A01:Broken Access Control, A02:Cryptographic Failures, A08:Software and Data Integrity Failures, A09:Security Logging and Monitoring Failures;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-276: Incorrect Default Permissions, CWE-502: Deserialization of Untrusted Data;Example 1: Unmonitored communications systems to ensure free speech. Pseudonymous messages do not allow us to trace the sender of the message.;
023;Psuedonymous Identity;Hide;Hide the identity by using a pseudonym and ensure a pseudonymous identity that can not be linked with a real identity during online interactions.;This pattern can be used for systems in which users are identified by public identities.;Controller, Model;7.4 Producing design solutions;Article 25 – Data protection by design and by default, Article 32 – Security of processing;Privacy as the default setting, Respect for User Privacy;A05:Security Misconfiguration, A07:Identification and Authentication Failures;CWE-306: Missing Authentication for Critical Function, CWE-798: Use of Hard-coded Credentials, CWE-287: Improper Authentication;Example 1: Aims to provide some privacy, but it is important to be aware of the possible vulnerabilities in using a pseudonym , which can be countered by implementing additional security measures if necessary.;
024;Aggregation Gateway;Hide;Encrypt, aggregate and decrypt at different places.;A service provider gets continuous measurements of a service attribute linked to a set of individual service users.;Controller, Model;7.4 Producing design solutions;Article 32 – Security of processing ;End-to-End Security, Privacy as the default setting;A06:Vulnerable and Outdated Components, A08:Software and Data Integrity Failures;CWE-502: Deserialization of Untrusted Data;Example 1: An electric utility operates a smart grid network with smart meters that provide measurements of the instantaneous power consumption of each user. The utility employs that information to adapt the power distribution in a dynamic fashion, according to the user demand at each moment.;
025;Informed Secure Passwords;Inform;Ensure that users maintain healthy authentication habits through awareness and understanding.;Credentials are required by numerous services (and products) in order to ensure that only authenticated and authorized users have access to certain features. Controllers typically provide authentication mechanisms in the form of usernames and passwords. Although these provide a weak form of security when used incorrectly, they are more convenient for users than many less popular and more secure alternatives. Controllers often try to circumvent the shortcomings of passwords by encouraging users to change them frequently, use stronger variations, check them, and prevent disclosure and reuse. However users make use of many services, and use many passwords, thus discouraging proper application. This misapplication can result in personal data being accessed by unauthorized persons.;Controller, View;7.2 Understanding and specifying the context of use;Article 25 – Data protection by design and by default;Privacy Embedded into Design, Visibility and Transparency;A02:Cryptographic Failures, A03:Injection, A05:Security Misconfiguration;CWE-20: Improper Input Validation, CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'), CWE-20: Improper Input Validation, CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'), CWE-94: Improper Control of Generation of Code ('Code Injection');Example 1: Every system that involves the use of a password to protect personal data should implement a password generation tool. This system, in addition to generating passwords, must educate users to create secure passwords.;
